/* Implement an algorithm to delete a node in the middle (i.e., any node but the first and last node, not necessarily exact the middle) of a singly linked list, given only access to that node */

/*JS*/

class Node {
    constructor(val)
    {
        this.data = val;
        this.next = null;
    }
}


function deleteMiddleNode(mid) {
    if(mid==null || mid.next==null) return false;
    
    let nextNode = mid.next;
    
    mid.data = nextNode.data;
    mid.next = nextNode.next;
    return true
};

let head = new Node(12);
head.next = new Node(11);
head.next.next = new Node(13);
head.next.next.next = new Node(21);


console.log(deleteMiddleNode(head.next.next));
console.log(head);
